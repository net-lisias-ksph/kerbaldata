[
  {
    "Id": "986254",
    "ThreadId": "429490",
    "Html": "\r\n<p>For those grabbing the latest source I have settled on using JSON.Net&nbsp;serialization&nbsp;patterns and converters to populate higher level classes. This allows both custom properties in classes with special handling while not losing any properties that\r\n are not&nbsp;serialized&nbsp;into a strict property or object type.</p>\r\n<p>&nbsp;</p>\r\n<p>Code usage is extremely&nbsp;simplified. This example is from a basic test that runs some simple functionality:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">// Open a save file</span>\n<span style=\"color:blue\">var</span> sf = SaveFile.CreateFromKspFile(<span style=\"color:#a31515\">@&quot;Data\\Saves\\KspPersistentSfswMods.sfs&quot;</span>);\n\n<span style=\"color:green\">// Fill all resource tanks (electric, fuel etc) Methods exsit on individual objects as well</span>\nsf.Game.FlightState.FillResources();\n\n<span style=\"color:green\">// Change the title</span>\nsf.Game.Title = <span style=\"color:#a31515\">&quot;HELLO WORLD!&quot;</span>;\n\n<span style=\"color:green\">// Clear all debris</span>\nsf.Game.FlightState.ClearDebris();\n\n<span style=\"color:green\">// Getting a vessel by name</span>\n<span style=\"color:blue\">var</span> sat = sf.Game.FlightState.Vessels.Where(v =&gt; v[<span style=\"color:#a31515\">&quot;name&quot;</span>].ToString().Contains(<span style=\"color:#a31515\">&quot;Beta Geo-Sat&quot;</span>)).FirstOrDefault();\n\n<span style=\"color:green\">// Changing the vessel's orbit using the Body enum. Method currently sets a default orbit ~100km above targe.</span>\nsat.Orbit.Change(Body.Eeloo);\n\n<span style=\"color:green\">// Saves file, automatically creates a backup of the orignal file</span>\nsf.Save();\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>This&nbsp;implementation&nbsp;does not have the top level class for loading from a KSP install location yet. I will be adding that with a later check in.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>All object types Game and lower are&nbsp;implemented&nbsp;as IDictionary&lt;string, JToken&gt;. The data found in the object's dictionary represents any properties found in the KSP data file that are not mapped to a typed property on the model. This allows\r\n the system to gracefully handle new fields added by Squad and mod authors while allowing end users/developers access to this data. Any changed made to this data will be&nbsp;reflected&nbsp;in the data file. Key names are case sensitive.&nbsp;</p>\r\n",
    "PostedDate": "2013-01-13T20:40:42.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]